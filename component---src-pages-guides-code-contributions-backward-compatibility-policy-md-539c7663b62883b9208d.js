(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[380],{95226:function(e,n,t){"use strict";t.r(n),t.d(n,{_frontmatter:function(){return m},default:function(){return h}});var a,o=t(22122),i=t(19756),r=(t(15007),t(64983)),d=t(99536),l=["components"],m={},s=(a="InlineAlert",function(e){return console.warn("Component "+a+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.mdx)("div",e)}),p={_frontmatter:m},c=d.Z;function h(e){var n=e.components,t=(0,i.Z)(e,l);return(0,r.mdx)(c,(0,o.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.mdx)("h1",{id:"backward-compatibility-policy"},"Backward compatibility policy"),(0,r.mdx)("p",null,"This page describes rules and best practices for backward compatible development."),(0,r.mdx)("p",null,"See the ",(0,r.mdx)("a",{parentName:"p",href:"https://devdocs.magento.com/guides/v2.4/extension-dev-guide/versioning/index.html"},"versioning")," documentation for the definitions of MAJOR and MINOR changes and how it impacts ",(0,r.mdx)("a",{parentName:"p",href:"https://glossary.magento.com/extension"},"extension")," developers."),(0,r.mdx)(s,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,r.mdx)("p",null," Note that the 'marketing version' (2.3) is different than the official version number. v2.2 -> v2.3 represents a MAJOR release, even though semantically, it is a MINOR increase to the 'marketing version' number."),(0,r.mdx)("p",null,"The Adobe team and contributing developers work in two release types:"),(0,r.mdx)("ol",null,(0,r.mdx)("li",{parentName:"ol"},(0,r.mdx)("p",{parentName:"li"},"New and significant release (product's MINOR release)"),(0,r.mdx)("ul",{parentName:"li"},(0,r.mdx)("li",{parentName:"ul"},"Necessary MAJOR and MINOR changes are allowed, but the architecture team ultimately decides what is allowed."))),(0,r.mdx)("li",{parentName:"ol"},(0,r.mdx)("p",{parentName:"li"},"New patch release (product's PATCH release)"),(0,r.mdx)("ul",{parentName:"li"},(0,r.mdx)("li",{parentName:"ul"},"PATCH changes are allowed, but MAJOR and MINOR changes are not allowed.")))),(0,r.mdx)(s,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,r.mdx)("p",null,"Backward Compatibility Policy is not applied to Plugins, Observers and Setup Scripts."),(0,r.mdx)("h2",{id:"prohibited-code-changes"},"Prohibited code changes"),(0,r.mdx)("p",null,"The following modifications are forbidden for ",(0,r.mdx)("inlineCode",{parentName:"p"},"@api")," code without the approval of the ",(0,r.mdx)("strong",{parentName:"p"},"Architect"),", ",(0,r.mdx)("strong",{parentName:"p"},"Product Manager")," and ",(0,r.mdx)("strong",{parentName:"p"},"Engineering Manager")," assigned to the component."),(0,r.mdx)(s,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,r.mdx)("p",null,"The rules listed do not apply to customization code, such as Plugins, Observers, JS Mixins, etc."),(0,r.mdx)("h3",{id:"composer"},"Composer"),(0,r.mdx)("h4",{id:"introducing-a-new-dependency-from-an-existing-module"},"Introducing a new dependency from an existing module"),(0,r.mdx)("p",null,"Introducing a new dependency from an existing module is a backward incompatible change because we cannot guarantee when Adobe will enable the required module. As a result, we cannot satisfy the dependency in this way."),(0,r.mdx)("h3",{id:"php"},"PHP"),(0,r.mdx)("p",null,"The following is a list of prohibited ",(0,r.mdx)("a",{parentName:"p",href:"https://glossary.magento.com/php"},"PHP")," code changes and possible alternative implementations."),(0,r.mdx)("h4",{id:"interfaceclass-removal"},"Interface/class removal"),(0,r.mdx)("p",null,"Mark the class with the ",(0,r.mdx)("inlineCode",{parentName:"p"},"@deprecated")," tag instead of removing it, and mark all of its methods as deprecated so an IDE can highlight them as deprecated."),(0,r.mdx)("h4",{id:"public-and-protected-method-removal"},"Public and protected method removal"),(0,r.mdx)("p",null,"Mark the method with the ",(0,r.mdx)("inlineCode",{parentName:"p"},"@deprecated")," tag instead of removing it."),(0,r.mdx)("p",null,"Continue returning the same results from the method if possible, so the old functionality is preserved."),(0,r.mdx)("h4",{id:"introduction-of-a-method-to-a-class-or-interface"},"Introduction of a method to a class or interface"),(0,r.mdx)("p",null,"Create a new interface with a new method instead of introducing a method to a class or interface."),(0,r.mdx)("p",null,"The new interface may take over existing methods from the class if it makes sense to group them together.\nIn this case, you must deprecate corresponding methods in the old interface/class with the ",(0,r.mdx)("inlineCode",{parentName:"p"},"@see")," annotation.\nThe old methods should proxy the calls to the new interface instead of duplicating the logic."),(0,r.mdx)("p",null,"For an example of an interface with an extracted method see the ",(0,r.mdx)("inlineCode",{parentName:"p"},"Magento\\Catalog\\Api\\CategoryListInterface"),".\nThis interface is responsible for the ",(0,r.mdx)("inlineCode",{parentName:"p"},"getList()")," method, but ",(0,r.mdx)("inlineCode",{parentName:"p"},"Magento\\Catalog\\Api\\CategoryRepositoryInterface")," does not have that method."),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"For a ",(0,r.mdx)("strong",{parentName:"li"},"PATCH")," product release, do NOT mark the new interface with ",(0,r.mdx)("inlineCode",{parentName:"li"},"@api"),"."),(0,r.mdx)("li",{parentName:"ul"},"For a ",(0,r.mdx)("strong",{parentName:"li"},"MINOR")," product release, an architect marks, or approves, the new interface with ",(0,r.mdx)("inlineCode",{parentName:"li"},"@api")," if applicable.")),(0,r.mdx)("h4",{id:"removing-static-functions"},"Removing static functions"),(0,r.mdx)("p",null,"Do not remove static functions."),(0,r.mdx)("h4",{id:"adding-parameters-in-public-methods"},"Adding parameters in public methods"),(0,r.mdx)("p",null,"Deprecate the method and add a new method with the new parameter(s) instead of adding them to a public method."),(0,r.mdx)("p",null,"Follow the alternative implementation described earlier for introducing a new method to a class or interface."),(0,r.mdx)("p",null,"Reference the new method in a ",(0,r.mdx)("inlineCode",{parentName:"p"},"@see")," tag as a recommended replacement.\nExplain the reasons for replacing the old method with the new one (e.g., there is a bug in the old method)."),(0,r.mdx)("h4",{id:"adding-parameters-in-protected-methods"},"Adding parameters in protected methods"),(0,r.mdx)("p",null,"Instead of adding parameters to protected methods, Create a new method with a new signature and deprecate the old method without changing it."),(0,r.mdx)("p",null,"Declare the new method as private if possible."),(0,r.mdx)("p",null,"Example code:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-php"},"/**\n- @deprecated This method is not intended for usage in child classes\n- @see updateScopedPrice($price, $storeId)\n */\nprotected function updatePrice($price)\n{\n    $this->updateScopedPrice($price);\n}\n\nprivate function updateScopedPrice($price, $storeId)\n{\n    // Updated logic that takes into account $storeId\n}\n")),(0,r.mdx)("h4",{id:"modifying-the-default-values-of-optional-arguments-in-public-and-protected-methods"},"Modifying the default values of optional arguments in public and protected methods"),(0,r.mdx)("p",null,"This is forbidden because the default argument values of public or protected methods are part of the ",(0,r.mdx)("a",{parentName:"p",href:"https://glossary.magento.com/api"},"API")," of the class/interface."),(0,r.mdx)("p",null,"As an alternative, Create a new method with new interface following the alternative implementation for creating a new method for a class or interface."),(0,r.mdx)("p",null,"Create multiple methods to cover all use cases to avoid using optional parameters."),(0,r.mdx)("h4",{id:"modifying-the-method-argument-type"},"Modifying the method argument type"),(0,r.mdx)("p",null,"Do not modify a method argument type."),(0,r.mdx)("h4",{id:"modifying-the-types-of-thrown-exceptions"},"Modifying the types of thrown exceptions"),(0,r.mdx)("p",null,"Do not modify the types of thrown exceptions unless a new ",(0,r.mdx)("a",{parentName:"p",href:"https://glossary.magento.com/exception"},"exception")," is a sub-type of the old one."),(0,r.mdx)("h4",{id:"throwing-a-new-type-of-exception-from-an-existing-method"},"Throwing a new type of exception from an existing method"),(0,r.mdx)("p",null,"You SHOULD NOT throw a new type of exception from an existing method. The existing clients of the method may not expect this change and consequently fail to properly handle the exception."),(0,r.mdx)("h4",{id:"adding-a-constructor-parameter"},"Adding a constructor parameter"),(0,r.mdx)("p",null,"Add a new optional parameter to the constructor at the end of the arguments list instead of modifying the constructor."),(0,r.mdx)("p",null,"In the constructor body, if the new dependency is not provided (i.e. the value of the introduced argument is ",(0,r.mdx)("inlineCode",{parentName:"p"},"null"),"), fetch the dependency using ",(0,r.mdx)("inlineCode",{parentName:"p"},"Magento\\Framework\\App\\ObjectManager::getInstance()"),"."),(0,r.mdx)("p",null,"Prefix the type name with a question mark when declaring a parameter with a ",(0,r.mdx)("inlineCode",{parentName:"p"},"null")," default value."),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-php"},"<?php\n/**\n * Copyright © Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\nuse Magento\\Framework\\App\\ObjectManager;\n\nclass ExistingClass\n{\n    /** @var \\New\\Dependency\\Interface */\n    private $newDependency;\n\n    public function __construct(\n        \\Old\\Dependency\\Interface $oldDependency,\n        $oldRequiredConstructorParameter,\n        $oldOptionalConstructorParameter = null,\n        \\New\\Dependency\\Interface $newDependency = null\n    ) {\n        ...\n        $this->newDependency = $newDependency ?: ObjectManager::getInstance()->get(\\New\\Dependency\\Interface::class);\n    }\n\n    public function existingFunction()\n    {\n        // Existing functionality\n        ...\n        ...\n\n        // Use $this->newDependency wherever the new dependency is needed\n        ...\n        ...\n    }\n}\n\n// Sample unit test code snippet follows\nclass ExistingClassTest extends \\PHPUnit_Framework_TestCase\n{\n    private $existingClassObject;\n\n    protected function setUp()\n    {\n        ...\n        // Create dependency mocks with $this->getMock() or $this->getMockBuilder()\n        $newDependencyMock = $this->getMock(\\New\\Dependency\\Interface::class);\n\n        $objectManager = new \\Magento\\Framework\\TestFramework\\Unit\\Helper\\ObjectManager($this);\n        $this->existingClassObject = $objectManager->getObject(\n            ExistingClass::class,\n            [\n                'oldDependency' => $oldDependencyMock,\n                'oldRequiredConstructorParameter' => 'foo',\n                'oldOptionalConstructorParameter' => 'bar',\n                'newDependency' => $newDependencyMock,\n            ]\n        );\n    }\n\n    public function testExistingFunction()\n    {\n        ...\n        ...\n    }\n}\n")),(0,r.mdx)("h4",{id:"removing-or-renaming-public-and-protected-properties"},"Removing or renaming public and protected properties"),(0,r.mdx)("p",null,"Mark properties with the ",(0,r.mdx)("inlineCode",{parentName:"p"},"@deprecated")," tag instead of removing or renaming them.\nContinue storing the value in the property to preserve the old functionality."),(0,r.mdx)("h4",{id:"removing-or-renaming-constants"},"Removing or renaming constants"),(0,r.mdx)("p",null,"Do not remove or rename constants."),(0,r.mdx)("h4",{id:"removing-renaming-or-changing-the-type-of-event-arguments"},"Removing, renaming, or changing the type of event arguments"),(0,r.mdx)("p",null,"Do not remove or rename ",(0,r.mdx)("a",{parentName:"p",href:"https://glossary.magento.com/event"},"event")," arguments.\nDo not change argument types.\nInstead of changing argument name or type, introduce new event argument with new name or type and deprecate the old argument by adding ",(0,r.mdx)("inlineCode",{parentName:"p"},"@deprecated")," annotation before dispatching the event."),(0,r.mdx)("p",null,"Example code:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-php"},"$transportObject = new DataObject($transport);\n\n/**\n * Event argument `transport` is @deprecated. Use `transport_object` instead.\n */\n$this->eventManager->dispatch(\n    'email_invoice_set_template_vars_before',\n    ['sender' => $this, 'transport' => $transportObject->getData(), 'transport_object' => $transportObject]\n);\n")),(0,r.mdx)("h3",{id:"js"},"JS"),(0,r.mdx)("p",null,"The following is a list of prohibited JS code changes:"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"Removing or renaming an interface or class"),(0,r.mdx)("li",{parentName:"ul"},"Removing or renaming public or protected methods"),(0,r.mdx)("li",{parentName:"ul"},"Introducing a method to an interface"),(0,r.mdx)("li",{parentName:"ul"},"Introducing an abstract method to a class"),(0,r.mdx)("li",{parentName:"ul"},"Removing or renaming static functions"),(0,r.mdx)("li",{parentName:"ul"},"Adding non-optional arguments in public and protected methods"),(0,r.mdx)("li",{parentName:"ul"},"Modifying the default value for optional arguments in public and protected methods"),(0,r.mdx)("li",{parentName:"ul"},"Removing or renaming public or protected properties"),(0,r.mdx)("li",{parentName:"ul"},"Removing or renaming constants")),(0,r.mdx)("h3",{id:"xml-schema"},"XML Schema"),(0,r.mdx)("p",null,"The following is a list of prohibited ",(0,r.mdx)("a",{parentName:"p",href:"https://glossary.magento.com/xml"},"XML")," Schema changes:"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"Adding an obligatory node"),(0,r.mdx)("li",{parentName:"ul"},"Adding an obligatory attribute"),(0,r.mdx)("li",{parentName:"ul"},"Removing or renaming an attribute or node type"),(0,r.mdx)("li",{parentName:"ul"},"Removing or renaming a configuration file")),(0,r.mdx)("h3",{id:"db-schema"},"DB Schema"),(0,r.mdx)("p",null,"The following is a list of prohibited DB Schema changes:"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"Modifying field type, default value, or property"),(0,r.mdx)("li",{parentName:"ul"},"Removing or renaming a table"),(0,r.mdx)("li",{parentName:"ul"},"Introducing a required field")),(0,r.mdx)("h3",{id:"cssless"},"CSS/Less"),(0,r.mdx)("p",null,"The following is a list of prohibited CSS/Less changes:"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"Removing or renaming a class"),(0,r.mdx)("li",{parentName:"ul"},"Removing or renaming a mix-in"),(0,r.mdx)("li",{parentName:"ul"},"Removing or renaming a variable")),(0,r.mdx)("h3",{id:"apis"},"APIs"),(0,r.mdx)("p",null,"The following is a list of prohibited API changes:"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"Removing or renaming an event"),(0,r.mdx)("li",{parentName:"ul"},"Removing or renaming a ",(0,r.mdx)("a",{parentName:"li",href:"https://glossary.magento.com/layout"},"layout")," handle"),(0,r.mdx)("li",{parentName:"ul"},"Removing or renaming a store configuration path"),(0,r.mdx)("li",{parentName:"ul"},"Modifying the directory structure"),(0,r.mdx)("li",{parentName:"ul"},"Removing an @api annotation"),(0,r.mdx)("li",{parentName:"ul"},"Modifying the tool command argument list"),(0,r.mdx)("li",{parentName:"ul"},"Modifying or removing the tool command"),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"https://devdocs.magento.com/guides/v2.4/extension-dev-guide/message-queues/config-mq.html"},"Topic names for message queue"),", except automatically generated names (e.g. topic names generated by ",(0,r.mdx)("a",{parentName:"li",href:"https://devdocs.magento.com/guides/v2.4/rest/asynchronous-web-endpoints.html"},"Asynchronous Web API"),". Automatically generated topic names should be treated as private implementation and may be changed at any time if needed.")),(0,r.mdx)("h3",{id:"translatable-phrases"},"Translatable phrases"),(0,r.mdx)("p",null,"Do not modify any translatable phrase."),(0,r.mdx)("h3",{id:"functional-and-integration-tests"},"Functional and integration tests"),(0,r.mdx)("p",null,"The following is a list of prohibited changes to functional and integration tests:"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"Changing a fixture format"),(0,r.mdx)("li",{parentName:"ul"},"Changing a fixture content (except changes forced by new functionality)")),(0,r.mdx)("h2",{id:"allowed-code-changes"},"Allowed Code Changes"),(0,r.mdx)("h3",{id:"php-1"},"PHP"),(0,r.mdx)("h4",{id:"changing-the-value-of-a-constant"},"Changing the value of a constant"),(0,r.mdx)("p",null,"Changing the value of a constant is itself a backward compatible change."),(0,r.mdx)("p",null,"Even if client code saves the value in permanent storage or use it as input or output of a method, it is the responsibility of that code to ensure that it is a reliable implementation."),(0,r.mdx)("p",null,"The client code should have enough control over the constant's value.\nDo not rely on a value of a constant from another ",(0,r.mdx)("a",{parentName:"p",href:"https://glossary.magento.com/module"},"module")," or another vendor."),(0,r.mdx)("h4",{id:"stop-setting-a-value-to-the-registry"},"Stop setting a value to the Registry"),(0,r.mdx)("p",null,"Setting a value to the Registry is backward compatible.\nHowever, Adobe discourages usage of the Registry, so third-party extensions should not depend on values in the Registry."),(0,r.mdx)("h4",{id:"adding-an-argument-to-an-event"},"Adding an argument to an event"),(0,r.mdx)("p",null,"Adding an argument to an event is allowed."),(0,r.mdx)("h2",{id:"version-changing-rules-for-module-setup"},"Version changing rules for module setup"),(0,r.mdx)("ol",null,(0,r.mdx)("li",{parentName:"ol"},(0,r.mdx)("p",{parentName:"li"},"The module data/schema version must not increase in a patch version release if the next minor version is already released."),(0,r.mdx)("p",{parentName:"li"},"For example, the module data/schema version for all patch releases of 2.0 can change prior to the release of 2.1.\nAfter 2.1 releases, the version cannot change for 2.0 patch releases, but it can change for 2.1 patch releases until 2.2.")),(0,r.mdx)("li",{parentName:"ol"},(0,r.mdx)("p",{parentName:"li"},"Deliver fixes that bump the module setup/data version in the current, unpublished version before delivering it to previous minor versions.\nIn cases where an urgent fix was delivered in a previous minor version, treat the fix for the current unpublished version as a high priority task."),(0,r.mdx)("p",{parentName:"li"},"For example, issue fixes that change the setup/upgrade version in the unreleased ",(0,r.mdx)("inlineCode",{parentName:"p"},"develop")," branch are delivered first before being ported into the released branches.\nIf the fix was made for a released branch, a pull request for porting it into the ",(0,r.mdx)("inlineCode",{parentName:"p"},"develop")," branch must be created with a high priority and delivered as soon as possible.")),(0,r.mdx)("li",{parentName:"ol"},(0,r.mdx)("p",{parentName:"li"},"The setup version of a module must be higher than previous releases of the same module."),(0,r.mdx)("p",{parentName:"li"},"For example, the setup version for a fix for the Magento_Catalog module is higher in the ",(0,r.mdx)("inlineCode",{parentName:"p"},"develop")," branch (2.1.3) than previous branch versions (2.0.2 and 2.1.2 for versions 2.0 and 2.1)."))),(0,r.mdx)("h2",{id:"backporting-fixes-with-breaking-changes-to-patch-branches"},"Backporting fixes with breaking changes to patch branches"),(0,r.mdx)("p",null,"Backward compatibility is more important than niceness and implementation effort, but an Adobe architect must be involved in making a decision."),(0,r.mdx)("p",null,"Potential drawbacks:"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"It is double the work when it is necessary to implement different solutions for the ",(0,r.mdx)("inlineCode",{parentName:"li"},"develop")," branch (upcoming minor release) and patch release branches."),(0,r.mdx)("li",{parentName:"ul"},"Inability to refactor code in patch releases"),(0,r.mdx)("li",{parentName:"ul"},"Effort for implementing fixes in patch releases may be higher due to necessary implementation workarounds.")),(0,r.mdx)("h2",{id:"refactoring-classes-that-reach-limit-of-coupling-between-objects"},"Refactoring classes that reach limit of coupling between objects"),(0,r.mdx)("p",null,"Poorly designed classes with too many responsibilities and dependencies should be refactored to prevent them from reaching the limit of coupling between objects, but removing excessive dependencies and/or breaking the class down into smaller classes is a backward incompatible implementation."),(0,r.mdx)("p",null,"Preserve public and protected class interfaces to maintain backward compatibility.\nReview and refactor the class such that parts of the logic go into smaller specialized classes without breaking backward compatibility."),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"Turn the existing class into a facade to prevent existing usages of the refactored methods from breaking."),(0,r.mdx)("li",{parentName:"ul"},"The old public/protected methods should be marked as deprecated with the ",(0,r.mdx)("inlineCode",{parentName:"li"},"@see")," tag to suggest the new implementation for new usages."),(0,r.mdx)("li",{parentName:"ul"},"Remove all unused private properties/methods."),(0,r.mdx)("li",{parentName:"ul"},"Mark as deprecated unused protected properties.\nRemove the variable type indicated in the DocBlock to remove the dependency."),(0,r.mdx)("li",{parentName:"ul"},"To preserve the constructor signature:",(0,r.mdx)("ul",{parentName:"li"},(0,r.mdx)("li",{parentName:"ul"},"Remove type hinting for unused parameters to remove dependency on their type."),(0,r.mdx)("li",{parentName:"ul"},"Add ",(0,r.mdx)("inlineCode",{parentName:"li"},"@SuppressWarnings(PHPMD.UnusedFormalParameter)")," for unused parameters.")))),(0,r.mdx)("h2",{id:"deprecation"},"Deprecation"),(0,r.mdx)("p",null,"The Commerce framework must not have alternative APIs.\nWhenever you introduce a new implementation of some behavior, mark the old implementation as deprecated and specify the reason."),(0,r.mdx)("h3",{id:"php-js-and-xml"},"PHP, JS, and XML"),(0,r.mdx)("p",null,"Use the ",(0,r.mdx)("inlineCode",{parentName:"p"},"@deprecated")," tag to mark methods as deprecated and follow it up with an explanation."),(0,r.mdx)("p",null,"Use the  ",(0,r.mdx)("inlineCode",{parentName:"p"},"@see")," tag to recommend the new API to use instead of the old one."),(0,r.mdx)("p",null,"Preserve ",(0,r.mdx)("inlineCode",{parentName:"p"},"@api")," tag when deprecating ",(0,r.mdx)("inlineCode",{parentName:"p"},"@api"),"-marked code."),(0,r.mdx)("h4",{id:"deprecating-in-php-and-js"},"Deprecating in PHP and JS"),(0,r.mdx)("p",null,"Comment:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-terminal"},"/**\n * @deprecated because newAPI  was introduced\n * @see \\New\\Api\n */\n")),(0,r.mdx)("p",null,"It is recommended to trigger a deprecation message in deprecated functions/classes to notify extensions/customizations that use them."),(0,r.mdx)("p",null,"PHP:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-php"},"trigger_error('Class is deprecated', E_USER_DEPRECATED);\n")),(0,r.mdx)("p",null,"JS:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-js"},"console.warn('Function is deprecated');\n")),(0,r.mdx)("h4",{id:"deprecating-in-xmlhtml"},"Deprecating in XML/HTML"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-xml"},"\x3c!--\n@deprecated because newAPI  was introduced\n@see NewApi\n--\x3e\n")),(0,r.mdx)("h3",{id:"webapi"},"WebAPI"),(0,r.mdx)("p",null,"When replacing a WebAPI method with a new implementation that has a different signature, make sure it remains accessible on the same resource but with the next sequential version."),(0,r.mdx)("h3",{id:"deprecation-testing"},"Deprecation testing"),(0,r.mdx)("p",null,"Every piece of code that is deprecated MUST be covered by a static test that will fail if some code uses the deprecated piece of code."),(0,r.mdx)("h3",{id:"removal-of-deprecated-code"},"Removal of deprecated code"),(0,r.mdx)("p",null,"Deprecated code is preserved for the following time frames:"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("inlineCode",{parentName:"li"},"@api")," code: Until the next major version of the component"),(0,r.mdx)("li",{parentName:"ul"},"non-",(0,r.mdx)("inlineCode",{parentName:"li"},"@api")," code: The next 2 minor releases or until a major release")),(0,r.mdx)("h2",{id:"documentation-of-backward-incompatible-changes"},"Documentation of Backward Incompatible Changes"),(0,r.mdx)("p",null,"Backward incompatible changes must be approved by an architect and documented in the scope of the task that introduces those changes."),(0,r.mdx)("p",null,"Examples of these tasks include:"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"Changing the input/output values format of a method"),(0,r.mdx)("li",{parentName:"ul"},"Changing a value format in the DB"),(0,r.mdx)("li",{parentName:"ul"},"Changing XML files (layouts, configuration files, etc.)")),(0,r.mdx)("p",null,"Some changes are detected and documented by an automated tool.\nThese backward incompatible changes do not need manual documentation:"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"Adding/removing a class/interface"),(0,r.mdx)("li",{parentName:"ul"},"Adding/removing a method"),(0,r.mdx)("li",{parentName:"ul"},"Modifying a method signature"),(0,r.mdx)("li",{parentName:"ul"},"Adding/removing a class/interface constant"),(0,r.mdx)("li",{parentName:"ul"},"Adding removing a class property")),(0,r.mdx)("p",null,"Auto-generated ","[Magento Open Source changes]",(0,r.mdx)("a",{parentName:"p",href:"https://devdocs.magento.com/guides/v2.4/release-notes/backward-incompatible-changes/reference.html"},"https://devdocs.magento.com/guides/v2.4/release-notes/backward-incompatible-changes/reference.html"),")\nAuto-generated ",(0,r.mdx)("a",{parentName:"p",href:"https://devdocs.magento.com/guides/v2.4/release-notes/backward-incompatible-changes/reference.html"},"Adobe Commerce changes")),(0,r.mdx)("h3",{id:"where-to-document"},"Where to document"),(0,r.mdx)("p",null,"In the ",(0,r.mdx)("a",{parentName:"p",href:"https://github.com/magento/devdocs"},"magento/devdocs")," repository, manually add backward incompatible changes to the following file:"),(0,r.mdx)("p",null,(0,r.mdx)("inlineCode",{parentName:"p"},"https://github.com/magento/devdocs/blob/master/src/guides/v<version>/release-notes/backward-incompatible-changes/index.md")),(0,r.mdx)("p",null,"Where: ",(0,r.mdx)("inlineCode",{parentName:"p"},"<version>")," is the MINOR version of the product (for example, 2.3)."),(0,r.mdx)("p",null,"Example: ",(0,r.mdx)("a",{parentName:"p",href:"https://github.com/magento/devdocs/blob/master/src/guides/v2.3/release-notes/backward-incompatible-changes/index.md"},(0,r.mdx)("inlineCode",{parentName:"a"},"https://github.com/magento/devdocs/blob/master/src/guides/v2.3/release-notes/backward-incompatible-changes/index.md")),"."),(0,r.mdx)("p",null,"Update the page for the ",(0,r.mdx)("em",{parentName:"p"},"next")," MINOR product release when working in the ",(0,r.mdx)("inlineCode",{parentName:"p"},"2.x-develop")," branch of the DevDocs repository."),(0,r.mdx)("p",null,"For example, when 2.3 is released, a new ",(0,r.mdx)("inlineCode",{parentName:"p"},"backward-incompatible-changes.md")," for 2.4 becomes available for editing."),(0,r.mdx)("p",null,"In order to update the page, create a PR to the DevDocs repository with your changes."),(0,r.mdx)("h2",{id:"graphql-backward-compatibility-policy"},"GraphQl backward compatibility policy"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"For backward compatibility, the GraphQL schema should be considered an API."),(0,r.mdx)("li",{parentName:"ul"},"To allow for the evolution of GraphQL, we allow MINOR changes to be added within a PATCH. This may change in the future.")))}h.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-guides-code-contributions-backward-compatibility-policy-md-539c7663b62883b9208d.js.map